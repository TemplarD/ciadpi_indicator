#!/usr/bin/env python3

import subprocess
import os
import json
from pathlib import Path

def run_command(cmd):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∏ –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
        return result.returncode, result.stdout, result.stderr
    except Exception as e:
        return -1, "", str(e)

def diagnose_ciadpi():
    print("üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ CIADPI...")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–∏—Å
    print("\n" + "="*50)
    print("1. –°–¢–ê–¢–£–° –°–ï–†–í–ò–°–ê:")
    print("="*50)
    
    ret, out, err = run_command("systemctl status ciadpi.service")
    print(out)
    if err:
        print("STDERR:", err)
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–µ—Ä–≤–∏—Å–∞
    print("\n" + "="*50)
    print("2. –ü–ê–†–ê–ú–ï–¢–†–´ –°–ï–†–í–ò–°–ê:")
    print("="*50)
    
    ret, out, err = run_command("systemctl show ciadpi.service --property=ExecStart --no-pager")
    print("ExecStart:", out)
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º override –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    print("\n" + "="*50)
    print("3. OVERRIDE –ö–û–ù–§–ò–ì:")
    print("="*50)
    
    override_file = "/etc/systemd/system/ciadpi.service.d/override.conf"
    if os.path.exists(override_file):
        ret, out, err = run_command(f"sudo cat {override_file}")
        print("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ override.conf:")
        print(out)
    else:
        print("‚ùå override.conf –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print("\n" + "="*50)
    print("4. –§–ê–ô–õ–´ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:")
    print("="*50)
    
    config_dir = Path.home() / '.config' / 'ciadpi'
    print(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–Ω—Ñ–∏–≥–∞: {config_dir}")
    
    if config_dir.exists():
        for file in config_dir.glob('*'):
            if file.is_file():
                print(f"\nüìÑ {file.name}:")
                try:
                    if file.suffix == '.json':
                        with open(file, 'r') as f:
                            content = json.load(f)
                        print(f"   {json.dumps(content, indent=2, ensure_ascii=False)}")
                    else:
                        with open(file, 'r') as f:
                            content = f.read().strip()
                        if content:
                            print(f"   {content}")
                        else:
                            print("   (–ø—É—Å—Ç–æ–π)")
                except Exception as e:
                    print(f"   –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: {e}")
    else:
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–Ω—Ñ–∏–≥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∏–Ω–∞—Ä–Ω–∏–∫ ciadpi
    print("\n" + "="*50)
    print("5. –ë–ò–ù–ê–†–ù–ò–ö CIADPI:")
    print("="*50)
    
    ciadpi_path = Path.home() / 'byedpi' / 'ciadpi'
    print(f"–ü—É—Ç—å: {ciadpi_path}")
    print(f"–°—É—â–µ—Å—Ç–≤—É–µ—Ç: {ciadpi_path.exists()}")
    print(f"–ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π: {os.access(ciadpi_path, os.X_OK)}")
    
    if ciadpi_path.exists():
        ret, out, err = run_command(f"file {ciadpi_path}")
        print(f"–¢–∏–ø —Ñ–∞–π–ª–∞: {out}")
    
    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º Python —Å–∫—Ä–∏–ø—Ç—ã
    print("\n" + "="*50)
    print("6. PYTHON –°–ö–†–ò–ü–¢–´:")
    print("="*50)
    
    scripts_dir = Path.home() / '.local' / 'bin'
    scripts = ['ciadpi_advanced_tray.py', 'ciadpi_whitelist.py', 'ciadpi_autosearch.py']
    
    for script in scripts:
        script_path = scripts_dir / script
        print(f"\n{script}:")
        print(f"  –°—É—â–µ—Å—Ç–≤—É–µ—Ç: {script_path.exists()}")
        if script_path.exists():
            print(f"  –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π: {os.access(script_path, os.X_OK)}")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç
            if script == 'ciadpi_whitelist.py':
                ret, out, err = run_command(f"python3 -c 'import sys; sys.path.append(\"{scripts_dir}\"); from ciadpi_whitelist import WhitelistManager; print(\"‚úÖ –ò–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω\")'")
                print(f"  –ò–º–ø–æ—Ä—Ç: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if ret == 0 else '‚ùå –û—à–∏–±–∫–∞'}")
                if err:
                    print(f"  –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {err}")
    
    # 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
    print("\n" + "="*50)
    print("7. –ü–û–°–õ–ï–î–ù–ò–ï –õ–û–ì–ò:")
    print("="*50)
    
    ret, out, err = run_command("journalctl -u ciadpi.service -n 10 --no-pager")
    print(out)

if __name__ == "__main__":
    diagnose_ciadpi()